<?php
    /**
     * Created by PhpStorm.
     * User: Timofeev
     * Date: 23.01.2019
     * Time: 12:30
     */

    /**
     * Task1 Найти сумму цифр числа
     *
     * Вам нужно разработать программу, которая считала бы сумму
     * цифр числа введенного пользователем.
     * Например: есть число 123, то программа должна
     * вычислить сумму цифр 1, 2, 3, т. е. 6.
     * По желанию можете сделать проверку на корректность введения
     * данных пользователем.
     *
     * @param string $number
     *
     * @return int|null
     */
    function sumDigitalsOfNumber($number)
    {
        if (!is_numeric($number)) {
            return null;
        }
        $number = strval($number);
        $sum = 0;
        for ($i = 0; $i < strlen($number); $i++) {
            $sum += $number[$i];
        }

        return $sum;
    }

    /**
     * Task2 Проверить количество вхождения цифры в число
     *
     * Вам нужно разработать программу, которая считала
     * бы количество вхождений какой-нибуть выбранной вами
     * цифры в выбранном вами числе. Например: цифра 5 в
     * числе 442158755745 встречается 4 раза
     *
     * @param int $number
     *
     * @return int
     */
    function countDigitInNumber($number, $digit)
    {
        $count = 0;
        $number = strval($number);

        for ($i = 0; $i < strlen($number); $i++) {
            if ($number[$i] == $digit) {
                $count++;
            }
        }
        return $count;
    }

    /**
     * Task3 Найти сумму чисел, которые делятся на 5
     *
     * Разработайте программу, которая из чисел 20 .. 45
     * находила те, которые делятся на 5 и найдите сумму
     * этих чисел. Рекомендую использовать функцию fmod
     * для определения "делится число" или "не делится".
     *
     * @return int
     *
     */
    function sumFmod5()
    {
        $start = 20;
        $end = 45;
        $divider = 5;

        $sum = 0;

        for ($i = $start; $i <= $end; $i++) {
            if (fmod($i, $divider) == 0) {
                $sum += $i;
            }
        }
        return $sum;
    }

    /**
     * Task4 Найти максимальное и минимальное значение массива
     *
     * Используются функции PHP
     * Ваше задание — создать массив, наполнить его
     * случайными значениями (можно использовать функцию rand),
     * найти максимальное и минимальное значение массива и
     * поменять их местами.
     *
     * @return array
     */
    function replaceMaxAndMinNumber()
    {
        $arr = [];
        for ($i = 0; $i < 10; $i++) {
            $arr[] = rand(0, 20);
        }
        $orgArr = $arr; // для вывода
        $maxKey = array_keys($arr, max($arr))[0];
        $minKey = array_keys($arr, min($arr))[0];

        list($arr[$maxKey], $arr[$minKey]) = [$arr[$minKey], $arr[$maxKey]];

        return ['orgArr' => $orgArr, 'arr' => $arr];
    }

    /**
     * Task4 Найти максимальное и минимальное значение массива
     *
     * Без функций PHP
     * Ваше задание — создать массив, наполнить его
     * случайными значениями (можно использовать функцию rand),
     * найти максимальное и минимальное значение массива и
     * поменять их местами.
     *
     * @return array
     */
    function replaceMaxAndMinNumber1()
    {
        $arr = [];
        $lenArr = 10;

        for ($i = 0; $i < $lenArr; $i++) {
            $arr[] = rand(0, 20);
        }
        $orgArr = $arr; // для вывода
        $maxKey = 0;
        $minKey = 0;

        for ($i = 0; $i < $lenArr; $i++) {
            if ($arr[$minKey] < $arr[$i]) {
                $minKey = $i;
            }

            if ($arr[$maxKey] > $arr[$i]) {
                $maxKey = $i;
            }
        }

        $buf = $arr[$maxKey];
        $arr[$maxKey] = $arr[$minKey];
        $arr[$minKey] = $buf;

        return ['orgArr' => $orgArr, 'arr' => $arr];
    }

    /**
     * Task5 Работа с индексами, элементами массива
     *
     * Вам нужно создать массив и заполнить его случайными
     * числами от 1 до 100 (ф-я rand). Далее, вычислить
     * произведение тех элементов, которые больше ноля и
     * у которых парные индексы. После вывести на экран
     * элементы, которые больше ноля и у которых не парный индекс.
     *
     * @return array
     */
    function workWithIndex()
    {
        $arr = [];
        $lenArr = 10;

        for ($i = 0; $i < $lenArr; $i++) {
            $arr[] = rand(1, 100);
        }

        $resArr = [];
        $op = 1;

        for ($i = 0; $i < $lenArr; $i++) {
            if ($arr[$i] > 0) {
                if (fmod($i, 2) == 0) {
                    $op *= $arr[$i];
                } else {
                    $resArr[] = $arr[$i];
                }
            }
        }

        return ['op' => $op, 'orgArr' => $arr, 'arr' => $resArr];
    }

    /**
     * Task6 Создание сокращенного варианта ФИО
     *
     * Вашим заданием будет создание сокращенного варианта ФИО.
     * Например, вводим: Иванов Иван Петрович, а в результате
     * должны получить: Иванов И. П.
     *
     * @param string $fullName
     *
     * @return string
     */
    function reductionFullName($fullName)
    {
        $arrName = explode(' ', $fullName);

        return $arrName[0] . ' ' . mb_substr($arrName[1],0,1) . '. ' . mb_substr($arrName[2],0,1).'.';
    }


    /**
     * Task7 Определения положения стрелки часов
     *
     * Разработайте программу, которая определяла количество
     * прошедших часов по введенным пользователем градусах.
     * Введенное число может быть от 0 до 360.
     *
     * @param $deg
     *
     * @return float|int|null
     */
    function howHour($deg)
    {
        if ($deg < 0 || $deg > 360) return null;
        $pct = round(12 / 360, 2);

        $hour = $pct * $deg;
        return round($hour) + 1;
    }

    /**
     * Task8 Рассчитать цвет сигнала светофора
     *
     * Работа светофора запрограммирована таким образом:
     * с начала каждого часа, в течении трех минут горит
     * зеленый сигнал, следующие две минуты горит красный,
     * дальше в течении трех минут - зеленый и т. д.
     * Вам нужно разработать программу, которая по введенному
     * числу определяла какого цвета сейчас горит сигнал.
     *
     * @param $n
     *
     * @return string|null
     */
    function trafficLight($n)
    {
        $green = [1, 2, 3];
        $red = [0, 4];

        $n = fmod($n, 5);
        if (in_array($n, $green)) {
            return "Green";
        } elseif (in_array($n, $red)) {
            return "Red";
        }
        return null;
    }

    /**
     * Task9 Проверить високосный ли год
     *
     * Вам нужно разработать программу, которая проверяла бы введенное
     * пользователем число (год). Число может быть в диапазоне от 1 до 9999.
     *
     * @param $year
     *
     * @return bool|null
     */
    function isLeapYear($year)
    {
        if (!($year > 0 && $year < 10000)) return null;
        $y = DateTime::createFromFormat('Y', $year)->format('L');
        return (boolean)$y;
    }

    /**
     * Task10 Определить достоинство игральных карт по номеру
     *
     * Игральным картам присвоены следующие порядковые номера в
     * зависимости от их достоинства: "валет" - 11, "дама" - 12,
     * "король" - 13, "туз" - 14. Порядковые номера остальных карт
     * соответствуют их названиям("семерка", "восмерка" и т. д.).
     * Вам нужно разработать программу, которая выводила достоинство
     * карты по заданному номеру, который будет вводит пользователь.
     *
     * @param $id
     *
     * @return mixed|null
     */
    function getCard($id)
    {
        $cards = [
            '11' => 'Валет',
            '12' => 'Дама',
            '13' => 'Король',
            '14' => 'Туз',
            '2' => 'Двойка',
            '3' => 'Тройка',
            '4' => 'Четвёрка',
            '5' => 'Пятёрка',
            '6' => 'Шестёрка',
            '7' => 'Семёрка',
            '8' => 'Восьмёрка',
            '9' => 'Девятка',
            '10' => 'Десятка',
        ];

        if (array_key_exists($id, $cards)) {
            return $cards[$id];
        } else {
            return null;
        }

    }

    /**
     * Task11 Определить название года за китайским календарем
     *
     * Составить программу, которая бы по заданному числу выводила
     * его название по китайском календаре. Заданное число не может
     * быть меньше 1924.
     *
     * @param $year
     *
     * @return string|null
     */
    function chineseCalendar($year)
    {
        $start = 1924;
        if ($year < $start) return null;
        $animal = [
            'крысы',
            'быка',
            'тигра',
            'кролика',
            'дракона',
            'змеи',
            'лошади',
            'овцы',
            'обезьяны',
            'петуха',
            'собака',
            'свиньи',
        ];

        return "Год " . $animal[intval(fmod($year - $start, 12))];
    }

    /**
     * Task12 Вычислить квадраты чисел
     *
     * Дано натуральное число n. Вычислить: 1^1 + 2^2 + .. + n^n.
     * Вывести на экран квадраты этих чисел, а также сумму квадратов этих чисел.
     *
     * @param $n
     *
     * @return int
     */
    function square($n)
    {
        if ($n > 0) {
            return square($n - 1) + pow($n, $n);
        } else {
            return $n;
        }
    }

